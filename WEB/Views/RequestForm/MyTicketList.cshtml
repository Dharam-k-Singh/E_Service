
@model Model.Models.RequestForm.TicketListCommonModel
@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int number = 0;

}

@*<style>
        /*
                                        *  STYLE 4
                                        */

        #scroller-style::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
            background-color: #F5F5F5;
        }

        #scroller-style::-webkit-scrollbar {
            width: 10px;
            background-color: #F5F5F5;
        }

        #scroller-style::-webkit-scrollbar-thumb {
            background-color: #000000;
            border: 2px solid #555555;
        }
    </style>
    <style>
        table.flexx_abc {
            width: 3000px;
        }

        tbody.yyyyyyy tr td span {
            text-align: center;
            display: block;
        }
    </style>*@

<style>
    /*
                                    *  STYLE 4
                                    */

    #scroller-style::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
        background-color: #F5F5F5;
    }

    #scroller-style::-webkit-scrollbar {
        width: 10px;
        background-color: #F5F5F5;
    }

    #scroller-style::-webkit-scrollbar-thumb {
        background-color: #000000;
        border: 2px solid #555555;
    }
</style>
<style>
    table.flexx_abc {
        width: 3000px;
    }

    tbody.yyyyyyy tr td span {
        white-space: nowrap;
        display: block;
    }

    .tableFixHead thead tr th {
        white-space: nowrap;
    }
</style>
<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">My Tickets</li>
    </ol>
</div>


<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">List of Request</h1>
    </div>
</div>



<div class="row">
    @if (TempData["Success"] != null)
    {
        <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>

    }

    @if (TempData["Failure"] != null)
    {
        <p class="alert alert-danger" id="failureMessage">@TempData["Failure"]</p>

    }
    <div class="col-md-12 ">

        <div class="panel panel-default articles ">
            <div class="panel-heading">
                <div class="col-md-12">
                    <form class="form-search-a" role="search">
                        <div class="input-group add-on">

                            <input class="form-control" placeholder="Search" id='search-box' type="text">
                            @*<div class="input-group-btn">
                                    <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                                </div>*@
                        </div>
                    </form>
                </div>

            </div>




            <div class="panel-body articles-container table-size">
                <div class="table-size-a rakeshcc" id="style-3">
                    <table class="table table-bordered table-hover flexx_a flexx_abc tableFixHead" cellspacing="0" width="100%">

                        <thead class="zzzzzzz">
                            <tr class="top-abc">
                                <th>Request No</th>
                                <th>Enterprise</th>
                                <th>Category</th>
                                <th>Sub Category</th>
                                <th>Severity</th>
                                <th>Subject</th>
                                <th>Description</th>
                                <th>Contact Person</th>
                                <th>Email Id</th>
                                <th>Mobile No</th>
                                <th>Status</th>
                                <th>Raised On</th>
                                @*<th>Updated On</th>
                                    <th>Updated By</th>*@
                                <th>Allocator Comments</th>

                                <th> Enterprise Supporting Document</th>
                                <th> Allocator Supporting Document</th>
                                <th> Department Supporting Document</th>
                                <th>ReOpened Comments</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody class="yyyyyyy">
                            @if (Model != null && Model.MyTicketList != null)
                            {
                                //int i = 1000;
                                foreach (var GetList in Model.MyTicketList)
                                {
                                    <tr>
                                        <td>
                                            @GetList.RequestNo
                                        </td>

                                        <td>
                                            @GetList.Enterprise
                                        </td>
                                        <td>
                                            @GetList.Category
                                        </td>

                                        <td>
                                            @GetList.SubCategory
                                        </td>
                                        <td>
                                            @GetList.Severity
                                        </td>
                                        <td>
                                            @GetList.Topic
                                        </td>
                                        <td>
                                            @GetList.RequestDescription
                                        </td>
                                        <td>
                                            @GetList.ContactPersonName
                                        </td>
                                        <td>
                                            @GetList.EmailId
                                        </td>
                                        <td>
                                            @GetList.MobileNo
                                        </td>

                                        <td>
                                            @GetList.RequestStatus
                                        </td>
                                        <td>
                                            @GetList.RaisedOn
                                        </td>
                                        @*<td>
                                                @GetList.UpdatedOn
                                            </td>
                                            <td>
                                                @GetList.UpdatedBy

                                            </td>*@
                                        <td>
                                            @GetList.CommentsBy
                                        </td>
                                        <td>
                                            <ul style="padding-left:0px; overflow-x:hidden;  max-height:100px;   overflow-y: auto;" id="scroller-style">

                                                @if (GetList.UploadPath != null)
                                                {
                                                    if (GetList.UploadPath.Contains(","))
                                                    {
                                                        string[] img = GetList.UploadPath.Split(new string[] { "," }, StringSplitOptions.None);
                                                        for (int j = 0; j < img.Length; j++)
                                                        {

                                                            <li style="padding: 5px 0px; list-style-type:none; text-align:left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                                                                <span class="text-left" style="text-align:left">
                                                                    <a style="line-height: 1.2; text-decoration:none;" title=" @img[j].Trim()" href="~/Uploads/RequestUpload/@img[j].Trim()" target="_blank">&nbsp; @(number += 1). @img[j].Trim()</a>
                                                                </span>
                                                            </li>

                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (GetList.UploadPath != null && GetList.UploadPath != "")
                                                        {
                                                            <li style="padding: 5px 0px; list-style-type:none; text-align:left; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                                                                <span class="text-left" style="text-align:left">
                                                                    <a style="line-height: 1.2; text-decoration:none;" title="@GetList.UploadPath" href="~/Uploads/RequestUpload/@GetList.UploadPath" target="_blank">@GetList.UploadPath</a>
                                                                </span>
                                                            </li>
                                                        }

                                                    }
                                                }
                                            </ul>
                                        </td>
                                        <td>
                                            @if (GetList.AllocatorUploadPath.Contains(","))
                                            {
                                                string[] img = GetList.AllocatorUploadPath.Split(new string[] { "," }, StringSplitOptions.None);
                                                for (int j = 0; j < img.Length; j++)
                                                {
                                                    <span>
                                                        <a href="~/Uploads/AllocateActionUpload/@img[j].Trim()" target="_blank">@img[j].Trim()</a>&nbsp;&nbsp;

                                                        <br />

                                                    </span>
                                                }
                                            }
                                            else
                                            {
                                                if (GetList.AllocatorUploadPath != null && GetList.AllocatorUploadPath != "")
                                                {

                                                    <span>
                                                        <a href="~/Uploads/AllocateActionUpload/@GetList.AllocatorUploadPath" target="_blank">@GetList.AllocatorUploadPath</a>&nbsp;&nbsp;


                                                    </span>
                                                }

                                            }
                                            @*<a href="@Url.Content(System.Configuration.ConfigurationManager.AppSettings["RequesUploadPath"] +   GetList.UploadPath)" target="_blank">
                                                    @GetList.UploadPath
                                                </a>
                                                <a href="@Url.Content(System.Configuration.ConfigurationManager.AppSettings["AllocateActionUploadPath"] +   GetList.AllocatorUploadPath)" target="_blank">
                                                    @GetList.AllocatorUploadPath
                                                </a>*@


                                        </td>
                                        <td>
                                            @if (GetList.DepartmentUploadPath.Contains(","))
                                            {
                                                string[] img = GetList.DepartmentUploadPath.Split(new string[] { "," }, StringSplitOptions.None);
                                                for (int j = 0; j < img.Length; j++)
                                                {
                                                    <span>
                                                        <a href="~/Uploads/DepartmentUserActionUploadPath/@img[j].Trim()" target="_blank">@img[j].Trim()</a>&nbsp;&nbsp;

                                                        <br />

                                                    </span>
                                                }
                                            }
                                            else
                                            {
                                                if (GetList.DepartmentUploadPath != null && GetList.DepartmentUploadPath != "")
                                                {

                                                    <span>
                                                        <a href="~/Uploads/DepartmentUserActionUploadPath/@GetList.DepartmentUploadPath" target="_blank">@GetList.DepartmentUploadPath</a>&nbsp;&nbsp;


                                                    </span>
                                                }

                                            }


                                        </td>

                                        <td>
                                            @GetList.ReOpenedComments
                                        </td>

                                        <td>
                                            @if (GetList.RequestStatus != "Closed" || GetList.RequestStatus == "Reopened")
                                            {
                                                <button id="myBtn_@GetList.AllocationID" class="btn-b btn-primary btnSubmit" value="@GetList.AllocationID" name="testId" onclick="myFunction(@GetList.AllocationID)">Change Status </button>

                                            }
                                            else
                                            {
                                                <button id="myBtn_@GetList.AllocationID" class="btn-b btn-primary btnSubmit" value="@GetList.AllocationID" name="testId" onclick="myFunction(@GetList.AllocationID)" hidden>Change Status </button>

                                            }
                                            @*<button id="myBtn_@GetList.AllocationID" class="btn-b btn-primary btnSubmit" value="@GetList.AllocationID" name="testId" onclick="myFunction()">Change Status </button>
                                                @Html.ActionLink("ChangeStatus", "", new { id = GetList.AllocationID })

                                                @Html.ActionLink("Delete", "Delete", new { id = GetList.RequestId }, new { onclick = "return confirm('Are you sure you want to delete this record?');" })*@
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>

                    </table>
                </div>


            </div>


            <div id="myModal" class="modal">
                <div class="popup popupzxc">
                    <h2><span>Action</span>  <button class="close">×</button></h2>
                    <div class="content">
                        <div class="user-dashboard bgcols">
                            <!--<h1>Dashboard</h1>-->

                            <div class="row">
                                @using (Html.BeginForm("ChangeTicketStatus", "RequestForm", FormMethod.Post, new { enctype = "multipart/form-data", @id = "SaveStatus" }))
                                {

                                    <div class="col-md-12 col-sm-5 col-xs-12 gutter ">

                                        @Html.HiddenFor(m => m.ChangeTicketStatus.AllocationID, new { @id = "AllocationID" })

                                        @*@Html.HiddenFor(m => m.RequestSaveActionAdmin.RequestComments, new { @id = "RequestComments" })*@

                                        <div class="row">

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="firstname" class="control-label  lfz">Status</label>
                                                    @Html.DropDownListFor(m => m.ChangeTicketStatus.RequestStatusID, (SelectList)ViewBag.status, "-- Select--", new { @class = "form-control", @required = "required", @id = "RequestStatusID" })
                                                    @Html.ValidationMessageFor(m => m.ChangeTicketStatus.RequestStatusID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>


                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="firstname" class="control-label  lfz">Comments</label>
                                                    @Html.TextAreaFor(m => m.ChangeTicketStatus.RequestComments, new { @class = "form-control", @id = "RequestComments" })
                                                    @Html.ValidationMessageFor(model => model.ChangeTicketStatus.RequestComments, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="firstname" class="control-label  lfz">Upload</label>
                                                    @Html.TextBoxFor(m => m.ChangeTicketStatus.UploadPath, new
                                               {
                                                   @class = "form-control",
                                                   @type = "file",
                                                   @name = "UploadPath",
                                                   @id = "UploadPath" + "0",
                                                   @accept = "image/jpeg,image/png,image/jpg,application/pdf",
                                                   @multiple = "multiple",
                                                   @onchange = "ShowDynamicFile(0)"
                                               })
                                                    @*@Html.ValidationMessageFor(model => model.InvestorProfileModel.LogoPath, "", new { @style = "color:red" })*@
                                                    <span id='FilePreview_0' name='FilePreview_0'> </span>
                                                    <label for="concept" class="col-sm-12 control-label" id="Uploaderror" style="display:none;color:red;"></label>
                                                </div>
                                            </div>

                                        </div>
                                        <br><br>
                                        <div class="row">
                                            <div class="col-xs-12 text-right">
                                                <button type="submit" name="Savestatus" id="Savestatus" class="btn btn-primary" onclick="loader();">Submit</button>
                                            </div>
                                        </div>
                                    </div>
                                }

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    function loader() {
        var reqStatusId = document.getElementById("RequestStatusID").value;

        if (reqStatusId == "") {
            return false;
        }
        else {
            $("#myModal").css("display", "none");
            showLoadingSweetAlert('Changing Status');
        }

    }
</script>
<script>
    function ShowDynamicFile(id) {
        console.log("dynamicnnnnnnn");
        //console.log(id);
        console.log(id);
        var input = document.getElementById('UploadPath' + id);
        var output = document.getElementById('FilePreview_' + id);
        var children = "";
        for (var i = 0; i < input.files.length; ++i) {
            children += input.files.item(i).name + '<br/>';
        }
        output.innerHTML = children;
    }
</script>
<script>
    var sizealert = "File is exceeding the allowed limit of 10 MB.";
    var extalert = 'Only files allowed(.png, .jpeg, .jpg ,.pdf, .doc , .xlsx , .docx , .xls)'
    $('#UploadPath').change(function (e) {
        $('#Uploaderror').hide();
        if (fileExtValidateimgpdfxlsx(this)) {
            if (fileSizeValidate(this)) {
                console.log('fff')

            }
            else {
                $('#UploadPath').val(null)
                $('#Uploaderror').text(sizealert);
                $('#Uploaderror').show();
            }
        }
        else {
            $('#UploadPath').val(null);
            $('#Uploaderror').text(extalert);
            $('#Uploaderror').show();
        }
    });

    //function ValidateFileName(e) {
    //    var filename = $('#Upload_0').val();
    //    // alert(filename)
    //    if (!checkSpecialCharacter(filename)) {
    //        alert('The file name may have special character.Please rename the file name and try to upload again.');

    //        return false;
    //    }
    //}
    //function checkSpecialCharacter(filename) {
    //    var re = new RegExp("^[^<>%$#%|]*$");
    //    var specialchars = re.test(filename);
    //    return specialchars;
    //}
</script>
<script>
    $(document).ready(function () {
        @foreach (var GG in Model.MyTicketList)
        {

         <text>   var modal = document.getElementById('myModal');</text>
         <text>   var btn = document.getElementById('myBtn_' + @GG.AllocationID);</text>
         <text>  var span = document.getElementsByClassName('close')[0];</text>
         <text>  btn.onclick = function() {
            modal.style.display = "block";
            modal.style.display = "block";
            $("#AllocationID").val(@GG.AllocationID);
        }
        span.onclick = function () {
            modal.style.display = "none";
        }
        window.onclick = function (event) {

            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        </text>

        }



    });
</script>
<script>
    (function () {
        var showResults;
        $('#search-box').keyup(function () {
            var searchText;
            searchText = $('#search-box').val();
            return showResults(searchText);
        });
        showResults = function (searchText) {
            $('tbody tr').hide();
            return $('tbody tr:Contains(' + searchText + ')').show();
        };
        jQuery.expr[':'].Contains = jQuery.expr.createPseudo(function (arg) {
            return function (elem) {
                return jQuery(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;
            };
        });
    }.call(this));
</script>
<script>
    function myFunction(Id) {

        var modal = document.getElementById('myModal');
        var btn = document.getElementById('myBtn_' + Id);
        var span = document.getElementsByClassName('close')[0];
        btn.onclick = function () {
            modal.style.display = "block";
            modal.style.display = "block";
            $("#RequestId").val(Id);
            $("#RequestId1").val(Id);
            console.log(RequestId)

        }
        span.onclick = function () {
            modal.style.display = "none";
        }
        window.onclick = function (event) {

            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

    }
</script>

@if (TempData["Success"] != null)
{
    <script type="text/javascript">
        $(document).ready(() => {

            $.confirm({
                title: '@(TempData["Success"]) ',
                content: " ",
                type: 'dark',
                typeAnimated: true,
                buttons: {
                    tryAgain: {
                        text: 'OK',
                        btnClass: 'btn-primary',
                        action: function () {
                            window.location.reload();
                        }
                    },
                }
            });


        });


    </script>
}

<script>

    jQuery(function ($) {
        $(document).ajaxSend(function () {
            $("#overlay").fadeIn(3000);
        });

        $('#Savestatus').click(function () {
            $.ajax({
                type: 'GET',
                success: function (data) {
                    console.log(data);
                }
            }).done(function () {
                setTimeout(function () {
                    $("#overlay").fadeOut(3000);
                }, 5000);
            });
        });
    });
</script>