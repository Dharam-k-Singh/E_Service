@model  Model.Models.RequestForm.RequestListCommonModel
@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel='stylesheet' href='https://afeld.github.io/emoji-css/emoji.css'>
@*<style>
    .bgcols {
        background: #FFF;
    }


    .rating ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    .rating {
        background: #fff;
        padding: 1em;
        border-radius: 3px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    }

    .rating__title {
        text-align: center;
        font-weight: 700;
        display: block;
    }

    .rating__list {
        max-width: 300px;
        margin: auto;
        display: -webkit-box;
        display: flex;
        -webkit-box-pack: justify;
        justify-content: space-between;
        padding: 1em 0;
    }

    .rating__input {
        display: none;
    }

    .rating__label {
        padding: 5px 3px;
        font-size: 26px;
        -webkit-filter: grayscale(1);
        filter: grayscale(1);
        opacity: .7;
        cursor: pointer;
    }

        .rating__label.active {
            -webkit-filter: grayscale(0);
            filter: grayscale(0);
            opacity: 1;
            -webkit-transition: all 100ms ease;
            transition: all 100ms ease;
        }

        .rating__label:hover {
            -webkit-filter: grayscale(0.84);
            filter: grayscale(0.84);
            -webkit-transform: scale(1.1);
            transform: scale(1.1);
            -webkit-transition: 100ms ease;
            transition: 100ms ease;
        }

    .feedback {
        width: 100%;
        /*display: none;*/
    }

        .feedback textarea, .feedback input {
            max-width: 300px;
            width: 100%;
            display: block;
            margin: .5em auto;
            padding: .5em;
            font-family: inherit;
            border: 1px solid #d1d2d7;
            border-radius: 3px;
        }

            .feedback textarea:focus, .feedback textarea:active, .feedback input:focus, .feedback input:active {
                border-color: #c80000;
                box-shadow: 0px 0px 0px 3px rgba(200, 0, 0, 0.2);
                -webkit-transition: 100ms;
                transition: 100ms;
                outline: 0;
            }

        .feedback textarea {
            height: 100px;
        }

        .feedback button {
            margin: 2.5em auto;
            display: table;
            text-align: center;
            background: #0e1a35;
            color: #FFF;
            border: 0px;
            padding: 10px;
        }

            .feedback button:focus, .feedback button:active {
                outline: 0;
            }

    .cb911_logo {
        width: 250px;
        position: absolute;
        top: 1em;
        left: 50%;
        margin-left: -125px;
    }

    .rating button {
        color: #ecedef;
        background-color: #9a9da8;
        border-radius: 3px;
        font-family: 'Source Sans Pro', Arial, sans-serif;
        border: 0;
        padding: 9px 15px;
        font-size: 15px;
    }

        .rating button.not-disabled {
            color: white;
            background-color: #c80000;
            text-shadow: 0px 1px 1px #620000;
            cursor: pointer;
        }

            .rating button.not-disabled:hover {
                background-color: #950000;
                -webkit-transition: 100ms;
                transition: 100ms;
            }



    p.mycopa {
        margin: 0;
        padding: 0;
        font-size: 1.8rem;
        line-height: 3.5rem;
    }

    h5.mycopa-h {
        margin: 0;
        padding: 0;
        font-size: 1.1rem;
    }
</style>*@
<style>
    .bgcols {
        background: #FFF;
    }


    .rating ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    .rating {
        background: #fff;
        padding: 1em;
        border-radius: 3px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    }

    .rating__title {
        text-align: center;
        font-weight: 700;
        display: block;
    }

    .rating__list {
        max-width: 300px;
        margin: auto;
        display: -webkit-box;
        display: flex;
        -webkit-box-pack: justify;
        justify-content: space-between;
        padding: 1em 0;
    }

    .rating__input {
        display: none;
    }

    .rating__label {
        padding: 5px 3px;
        font-size: 26px;
        -webkit-filter: grayscale(1);
        filter: grayscale(1);
        opacity: .7;
        cursor: pointer;
    }

        .rating__label.active {
            -webkit-filter: grayscale(0);
            filter: grayscale(0);
            opacity: 1;
            -webkit-transition: all 100ms ease;
            transition: all 100ms ease;
        }

        .rating__label:hover {
            -webkit-filter: grayscale(0.84);
            filter: grayscale(0.84);
            -webkit-transform: scale(1.1);
            transform: scale(1.1);
            -webkit-transition: 100ms ease;
            transition: 100ms ease;
        }

    .feedback {
        width: 100%;
        /*display: none;*/
    }

        .feedback textarea, .feedback input {
            max-width: 300px;
            width: 100%;
            display: block;
            margin: .5em auto;
            padding: .5em;
            font-family: inherit;
            border: 1px solid #d1d2d7;
            border-radius: 3px;
        }

            .feedback textarea:focus, .feedback textarea:active, .feedback input:focus, .feedback input:active {
                border-color: #c80000;
                box-shadow: 0px 0px 0px 3px rgba(200, 0, 0, 0.2);
                -webkit-transition: 100ms;
                transition: 100ms;
                outline: 0;
            }

        .feedback textarea {
            height: 100px;
        }

        .feedback button {
            margin: 2.5em auto;
            display: table;
            text-align: center;
            background: #0e1a35;
            color: #FFF;
            border: 0px;
            padding: 10px;
        }

            .feedback button:focus, .feedback button:active {
                outline: 0;
            }

    .cb911_logo {
        width: 250px;
        position: absolute;
        top: 1em;
        left: 50%;
        margin-left: -125px;
    }

    .rating button {
        color: #ecedef;
        background-color: #9a9da8;
        border-radius: 3px;
        font-family: 'Source Sans Pro', Arial, sans-serif;
        border: 0;
        padding: 9px 15px;
        font-size: 15px;
    }

        .rating button.not-disabled {
            color: white;
            background-color: #c80000;
            text-shadow: 0px 1px 1px #620000;
            cursor: pointer;
        }

            .rating button.not-disabled:hover {
                background-color: #950000;
                -webkit-transition: 100ms;
                transition: 100ms;
            }



    p.mycopa {
        margin: 0;
        padding: 0;
        font-size: 1.8rem;
        line-height: 3.5rem;
    }

    h5.mycopa-h {
        margin: 0;
        padding: 0;
        font-size: 1.1rem;
    }

    .tableFixHead thead tr th {
        white-space: nowrap;
    }
</style>
<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">List of Request</li>
    </ol>
</div>


<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">List of Request</h1>
    </div>
</div>



<div class="row">
    @if (TempData["Success"] != null)
    {
        <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>

    }

    @if (TempData["Failure"] != null)
    {
        <p class="alert alert-danger" id="failureMessage">@TempData["Failure"]</p>

    }
    <div class="col-md-12 ">





        <div class="panel panel-default articles ">
            <div class="panel-heading">
                <div class="col-md-12">
                    <form class="form-search-a" role="search">
                        <div class="input-group add-on">

                            <input class="form-control" placeholder="Search" id='search-box' type="text">
                            @*<div class="input-group-btn">
                                    <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                                </div>*@
                        </div>
                    </form>
                </div>

            </div>

            <div class="panel-body articles-container table-size">
                <div class="table-size-a rakeshcc" id="style-3">
                    <table class="table table-bordered table-hover flexx_a flexx_abc tableFixHead" cellspacing="0" width="100%">

                        <thead class="zzzzzzz">
                            <tr class="top-abc">
                                <th>Request No</th>
                                <th>Category</th>
                                @*<th>Enterprise</th>*@
                                <th>Sub Category</th>
                                <th>Severity</th>
                                <th>Subject</th>
                                <th>Description</th>
                                <th>Contact Person</th>
                                <th>Email Id</th>
                                <th>Mobile No</th>
                                <th>Status</th>
                                <th>Raised On</th>
                                @*<th>Updated On</th>
        <th>Updated By</th>*@
                                <th>Comments</th>
                                <th>Department Supporting Documents</th>
                                <th>Action</th>
                                <th>Reopen Request</th>
                                <th>ReOpened Comments</th>
                            </tr>
                        </thead>
                        <tbody class="yyyyyyy">

                            @foreach (var GetList in Model.RequestEnterpriseList)
                            {
                            <tr>
                                <td>
                                    @GetList.RequestNo
                                </td>
                                <td>
                                    @GetList.Category
                                </td>

                                <td>
                                    @GetList.SubCategory
                                </td>
                                <td>
                                    @GetList.Severity
                                </td>
                                <td>
                                    @GetList.Topic
                                </td>
                                <td>
                                    @GetList.RequestDescription
                                </td>
                                <td>
                                    @GetList.ContactPersonName
                                </td>
                                <td>
                                    @GetList.EmailId
                                </td>
                                <td>
                                    @GetList.MobileNo
                                </td>

                                <td>
                                    @GetList.RequestStatus
                                </td>
                                <td>
                                    @GetList.RaisedOn
                                </td>
                                @*<td>
            @GetList.UpdatedOn
        </td>
        <td>
            @GetList.UpdatedBy

        </td>*@
                                <td>
                                    @GetList.CommentsBy
                                </td>
                                <td>
                                    @if (GetList.DepartmentUploadPath.Contains(","))
                                    {
                                        string[] img = GetList.DepartmentUploadPath.Split(new string[] { "," }, StringSplitOptions.None);
                                        for (int j = 0; j < img.Length; j++)
                                        {
                                            <span>
                                                <a href="~/Uploads/DepartmentUserActionUploadPath/@img[j].Trim()" target="_blank">@img[j].Trim()</a>&nbsp;&nbsp;

                                                <br />

                                            </span>
                                        }
                                    }
                                    else
                                    {
                                        if (GetList.DepartmentUploadPath != null && GetList.DepartmentUploadPath != "")
                                        {

                                            <span>
                                                <a href="~/Uploads/DepartmentUserActionUploadPath/@GetList.DepartmentUploadPath" target="_blank">@GetList.DepartmentUploadPath</a>&nbsp;&nbsp;


                                            </span>
                                        }

                                    }
                                </td>
                                @*<td>
            @Html.DisplayFor(m => GetUserList.Password)
        </td>*@

                                <td>
                                    @if (GetList.RequestStatus == "Closed")
                                    {
                                        <button style=" width: 130px; line-height: 30px; border-radius: 5px;" id="myBtn_@GetList.RequestId" class="btn-b btn-primary btnSubmit" value="@GetList.RequestId" name="testId" onclick="myFunction(@GetList.RequestId)"><i class="fa fa-comment-o" aria-hidden="true"></i> Add Feedback</button>

                                    }
                                    else
                                    {
                                        <button style=" width: 130px; line-height: 30px; border-radius: 5px;" id="myBtn_@GetList.RequestId" class="btn-b btn-primary btnSubmit" value="@GetList.RequestId" name="testId" onclick="myFunction(@GetList.RequestId)" hidden><i class="fa fa-comment-o" aria-hidden="true"></i> Add Feedback</button>

                                    }

                                    @if (GetList.RequestStatus != "Closed" && GetList.RequestStatus != "Reopened")
                                    {
                                        @Html.ActionLink("Edit", "EditRequest", new { id = GetList.RequestId }) <br />

                                        @Html.ActionLink("Delete", "Delete", new { id = GetList.RequestId }, new { onclick = "return confirm('Are you sure you want to delete this record?');" })
                                    }
                                </td>

                                <td>
                                    @if (GetList.RequestStatus == "Closed")
                                    {
                                        <button style=" width: 90px; line-height: 30px; border-radius: 5px;" id="myBtn1_@GetList.RequestId" class="btn-b btn-primary btnSubmit" value="@GetList.RequestId" name="testId1" onclick="myFunction1(@GetList.RequestId)"><i class="fa fa-repeat" aria-hidden="true"></i> Re open </button>

                                    }


                                    @*@if (GetList.RequestStatus == "Closed")
            {
                @Html.ActionLink("Reopen", "ReopenRequest", new { id = GetList.RequestId }, new { onclick = "return confirm('Are you sure you want to Reopen this Request?');" })
            }*@
                                </td>
                                <td>
                                    @GetList.ReOpenedComments
                                </td>
                            </tr>
                            }
                        </tbody>

                    </table>
                </div>

                @*<div class="text-center"><button class="btn btn-primary" type="submit">Save</button> <button class="b tn btn-primary" type="submit">Reset</button></div>*@
            </div>


            <style>
                .feed-page {
                    display: grid;
                    grid-template-columns: 1fr 1fr;
                    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
                }

                .left-feed-page {
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    background-color: hsl(231deg 60% 93%);
                }

                .right-feed-page {
                    padding: 7em 2.5em 4em;
                    background: #f5f4f4;
                }

                .feed-page h1 {
                    margin: 2em 1em;
                    font-size: 250%;
                }

                .feed-page img {
                    height: auto;
                    max-width: 30em;
                    margin-bottom: 2em;
                }

                .feed-boot-img {
                    width: 100%;
                    text-align: center;
                }


                h2.satis-feed {
                    font-size: 100%;
                    font-weight: 600;
                    line-height: 1.3;
                    color: hsl(230deg 58% 30%);
                    text-align: center;
                }

                input.req-code {
                    width: auto;
                    text-align: left;
                    font-weight: bold;
                    border: 0;
                    background: transparent;
                }

                .em, .em-svg {
                    height: 2.5em;
                    width: 2.5em;
                }


                textarea.text-feedback {
                    width: 100%;
                    margin: 15px auto;
                    max-width: 75%;
                    height: 7em;
                    padding: 1em;
                    border: none;
                    border-radius: 0.3em;
                    color: #001f57;
                    background-color: hsl(229deg 61% 93%);
                }

                .modal {
                    z-index: 9999999999 !important;
                }
            </style>
            <div id="myModal" class="modal">
                <div class="popup popupzxc">

                    <h2><span> </span>  <button class="close">×</button></h2>

                    <div class="feed-page">
                        <div class="left-feed-page">
                            <h1>Feel free to drop us your feedback.</h1>
                            <div class="feed-boot-img">
                                <img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/1457119/feedback-form-template.svg"
                                     alt="A woman is sitting on the floor and working on a laptop (vector illustration)" />
                            </div>
                        </div>
                        <div class="right-feed-page">


                            <div class="row">
                                @using (Html.BeginForm("SaveFeedBackRating", "RequestForm", FormMethod.Post, new { enctype = "multipart/form-data", @id = "SaveRating" }))
                                {
                                    <form class="rating">


                                        <div class="rating__title">
                                            <h2 class="satis-feed">
                                                @Html.HiddenFor(m => m.SaveFeedbackRating.RequestId, new { @id = "RequestId" })Rate us for recently closed  # <input class="req-code" type='text' id='RequestId1' disabled />
                                            </h2>






                                            <div class="rating__list">

                                                <div class="rating__item">
                                                    @Html.RadioButtonFor(m => m.SaveFeedbackRating.RatingtID, 35, new { @class = "rating__input rating--2", @required = "required", @value = 35, @id = "rating-2-2" })
                                                    @*<input class="rating__input rating--2" id="rating-2-2" type="radio" value="35" name="rating" />*@
                                                    <label class="rating__label rating--2" for="rating-2-2"><i class="em em-grinning"></i></label>
                                                </div>
                                                <div class="rating__item">
                                                    @Html.RadioButtonFor(m => m.SaveFeedbackRating.RatingtID, 36, new { @class = "rating__input rating--3", @required = "required", @value = 36, @id = "rating-3-2" })
                                                    <label class="rating__label rating--3" for="rating-3-2"><i class="em em-expressionless"></i></label>
                                                </div>
                                                <div class="rating__item">
                                                    @Html.RadioButtonFor(m => m.SaveFeedbackRating.RatingtID, 37, new { @class = "rating__input rating--4", @required = "required", @value = 37, @id = "rating-4-2" })
                                                    <label class="rating__label rating--4" for="rating-4-2"><i class="em em-disappointed"></i></label>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="feedback">
                                            @Html.TextAreaFor(m => m.SaveFeedbackRating.FeedbackComments, new { @class = "form-control text-feedback", @id = "FeedbackComments", @placeholder = "Please tell us your Feedback here...", @maxlength = "500" })
                                            @Html.ValidationMessageFor(model => model.SaveFeedbackRating.FeedbackComments, "", new { @class = "text-danger" })


                                            <button type="submit" name="Saverating" id="Saverating">Send</button>
                                        </div>

                                    </form>


                                }

                            </div>


                        </div>
                    </div>

                    <div class="content">
                        <div class="user-dashboard bgcols">
                            <!--<h1>Dashboard</h1>-->



                        </div>
                    </div>
                </div>
            </div>



            <div id="myModal1" class="modal">
                <div class="popup popupzxc">


                    <h2><span>Action</span>  <button class="close1 close">×</button></h2>



                    <div class="content">
                        <div class="user-dashboard bgcols">
                            <!--<h1>Dashboard</h1>-->

                            <div class="row">
                                @using (Html.BeginForm("ReopenRequest", "RequestForm", FormMethod.Post, new { enctype = "multipart/form-data", @id = "SaveStatus" }))
                                {

                                    <div class="col-md-12 col-sm-5 col-xs-12 gutter ">

                                        @Html.HiddenFor(m => m.ReOpenTicketStatus.RequestId, new { @id = "RequestId2" })

                                        @Html.HiddenFor(m => m.ReOpenTicketStatus.RequestStatusID, new { @id = "RequestStatusID", @Value = "44" })

                                        @*@Html.HiddenFor(m => m.RequestSaveActionAdmin.RequestComments, new { @id = "RequestComments" })*@

                                        <div class="row">

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="firstname" class="control-label  lfz">Status</label>
                                                   
                                                    <input class="form-control" value="ReOpened" type="text" disabled>
                                                    @*@Html.DropDownListFor(m => m.ReOpenTicketStatus.RequestStatusID, (SelectList)ViewBag.status1,  new { @class = "form-control", @required = "required", @id = "RequestStatusID"})
        @Html.ValidationMessageFor(m => m.ReOpenTicketStatus.RequestStatusID, "", new { @class = "text-danger" })*@
                                                </div>
                                            </div>


                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="firstname" class="control-label  lfz">Comments</label>
                                                    @Html.TextAreaFor(m => m.ReOpenTicketStatus.ReOpenedComments, new { @class = "form-control", @id = "ReOpenedComments" })
                                                    @Html.ValidationMessageFor(model => model.ReOpenTicketStatus.ReOpenedComments, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </div>
                                        <br><br>
                                        <div class="row">
                                            <div class="col-xs-12 text-right">

                                                <button type="submit" name="Savestatus" id="Savestatus" class="btn btn-primary">Submit</button>
                                            </div>
                                        </div>


                                    </div>

                                }

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    $(document).ready(function () {
        @foreach (var GG in Model.RequestEnterpriseList)
        {

         <text>   var modal = document.getElementById('myModal');</text>
         <text>   var btn = document.getElementById('myBtn_' + @GG.RequestId);</text>
         <text>  var span = document.getElementsByClassName('close')[0];</text>
         <text>  btn.onclick = function() {
            modal.style.display = "block";
            modal.style.display = "block";
            $("#RequestId").val(@GG.RequestId);
        }
        span.onclick = function () {
            modal.style.display = "none";
        }
        window.onclick = function (event) {

            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        </text>

        }



    });
</script>
<script>
    $(document).ready(function () {
        @foreach (var GG in Model.RequestEnterpriseList)
        {
            @*<text> alert();</text>*@
         <text>   var modal1 = document.getElementById('myModal1');</text>
         <text>   var modal = document.getElementById('myModal');</text>
         <text>   var btn = document.getElementById('myBtn1_' + @GG.RequestId);</text>
         <text>  var span = document.getElementsByClassName('close1')[0];</text>
         <text>  btn.onclick = function() {
            modal1.style.display = "block";
            modal1.style.display = "block";
            modal.style.display = "block";
            $("#RequestId2").val(@GG.RequestId);

            console.log(RequestId2)

        }
        span.onclick = function () {
            modal1.style.display = "none";
        }
        window.onclick = function (event) {

            if (event.target == modal1) {
                modal1.style.display = "none";
                modal.style.display = "none";
            }
        }

        </text>

        }



    });
</script>
<script>
    (function () {
        var showResults;
        $('#search-box').keyup(function () {
            var searchText;
            searchText = $('#search-box').val();
            return showResults(searchText);
        });
        showResults = function (searchText) {
            $('tbody tr').hide();
            return $('tbody tr:Contains(' + searchText + ')').show();
        };
        jQuery.expr[':'].Contains = jQuery.expr.createPseudo(function (arg) {
            return function (elem) {
                return jQuery(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;
            };
        });
    }.call(this));
</script>
<script>
    $('button.submit').disabled = true;	// disable button on load

    // Enable button
    function enable_submit() {
        $('button.submit').disabled = false;
        $('button.submit').addClass('not-disabled');
    }

    // Disable button
    function disable_submit() {
        $('button.submit').disabled = true;
        $('button.submit').removeClass('not-disabled');
    }

    // Display feedback after rating
    $('.rating__input').on('click', function () {
        var rating = this['value'];
        $('.rating__label').removeClass('active');
        $(this).siblings('.rating__label').addClass('active');
        $('.feedback').css('display', "block");

        feedback_validate(rating);

    });

    // Run enable button function based on input
    $('.feedback textarea').keyup(function () {
        if ($('.feedback textarea').val().length > 3) {
            enable_submit();
        }
    });

    // Enable or disable button by validation
    function feedback_validate(val) {
        if (val <= 3) {
            disable_submit();

        }
        else if (val > 3) {
            enable_submit();
        }

    }

    function myFunction(Id) {

        var modal = document.getElementById('myModal');
        var btn = document.getElementById('myBtn_' + Id);
        var span = document.getElementsByClassName('close')[0];
        btn.onclick = function () {
            modal.style.display = "block";
            modal.style.display = "block";
            $("#RequestId").val(Id);
            $("#RequestId1").val(Id);
            console.log(RequestId)

        }
        span.onclick = function () {
            modal.style.display = "none";
        }
        window.onclick = function (event) {

            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

    }




</script>

<script>
    function myFunction1(Id) {

        var modal1 = document.getElementById('myModal1');
        var btn = document.getElementById('myBtn1_' + Id);
        var span = document.getElementsByClassName('close1')[0];
        btn.onclick = function () {
            modal1.style.display = "block";
            modal1.style.display = "block";
            $("#RequestId").val(Id);
            $("#RequestId2").val(Id);
            console.log(RequestId2)

        }
        span.onclick = function () {
            modal1.style.display = "none";
        }
        window.onclick = function (event) {

            if (event.target == modal1) {
                modal1.style.display = "none";
            }
        }

    }
</script>

@if (TempData["Success"] != null)
{
    <script type="text/javascript">

            window.onload = function () {
                @*alert("@(TempData["Success"])");*@

                                $.confirm({
                                    title: '@(TempData["Success"]) ',
                                    content: " ",
                                    type: 'dark',
                                    typeAnimated: true,
                                    buttons: {
                                        tryAgain: {
                                            text: 'OK',
                                            btnClass: 'btn-primary',
                                            action: function () {

                                                window.location.reload();
                                            }
                                        },
                                    }
                                });
            };
    </script>
}
