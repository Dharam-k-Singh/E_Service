

@model Model.Models.RequestForm.RequestAdminListCommonModel
@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .tableFixHead thead tr th {
        white-space: nowrap;
    }
</style>
<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">View History List</li>
    </ol>
</div>


<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">View History List</h1>
    </div>
</div>



<div class="row">
    @if (TempData["Success"] != null)
    {
        <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>

    }

    @if (TempData["Failure"] != null)
    {
        <p class="alert alert-danger" id="failureMessage">@TempData["Failure"]</p>

    }
    <div class="col-md-12 ">

        <div class="panel panel-default articles ">
            <div class="panel-heading">
                <div class="col-md-12">
                    <form class="form-search-a" role="search">
                        <div class="input-group add-on">

                            <input class="form-control" placeholder="Search" id='search-box' type="text">
                            @*<div class="input-group-btn">
                                    <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                                </div>*@
                        </div>
                    </form>
                </div>

            </div>




            <div class="panel-body articles-container table-size">
                <div class="table-size-a rakeshcc" id="style-3">
                    <table class="table table-bordered table-hover flexx_a flexx_abc tableFixHead" cellspacing="0" width="100%">

                        <thead class="zzzzzzz">
                            <tr class="top-abc">
                                <th>Request No</th>
                                <th>Department</th>
                                <th>Priority</th>
                                <th>Status</th>
                                <th>Commitement Date</th>
                                <th>Escalate Ondate</th>
                                <th>Escalation level EmailId</th>
                                @*<th>Escalation level2 EmailId</th>*@
                                <th>Comments</th>

                                <th> Enterprise Supporting Document</th>
                                <th> Allocator Supporting Document</th>
                                <th> Department Supporting Document</th>
                                <th>Allocated By</th>
                                <th>Updated Date</th>
                                <th>ReOpened Comments</th>
                                @*<th>Action</th>*@
                            </tr>
                        </thead>
                        <tbody class="yyyyyyy">

                            @foreach (var GetList in Model.RequestHistoryList)
                            {
                            <tr>
                                <td>
                                    @GetList.RequestNo
                                </td>
                                <td>
                                    @GetList.Department
                                </td>

                                <td>
                                    @GetList.Priority
                                </td>
                                <td>
                                    @GetList.RequestStatus
                                </td>

                                <td>
                                    @GetList.Commitementdate
                                </td>
                                <td>
                                    @GetList.EscalateOndate
                                </td>
                                <td>
                                    @GetList.EscLevel1EmailId
                                </td>
                                @*<td>
            @GetList.EscLevel2EmailId
        </td>*@
                                <td>
                                    @GetList.RequestComments
                                </td>

                                <td>
                                    @if (GetList.UploadPath != null && GetList.UploadPath.Contains(","))
                                    {
                                        string[] img = GetList.UploadPath.Split(new string[] { "," }, StringSplitOptions.None);
                                        for (int j = 0; j < img.Length; j++)
                                        {
                                            <span>
                                                <a href="~/Uploads/RequestUpload/@img[j]" target="_blank">@img[j]</a>&nbsp;&nbsp;

                                                <br />

                                            </span>
                                        }
                                    }
                                    else
                                    {
                                        if (GetList.UploadPath != null && GetList.UploadPath != "")
                                        {

                                            <span>
                                                <a href="~/Uploads/RequestUpload/@GetList.UploadPath" target="_blank">@GetList.UploadPath</a>&nbsp;&nbsp;


                                            </span>
                                        }

                                    }
                                </td>
                                <td>
                                    @if (GetList.AllocatorUploadPath != null && GetList.AllocatorUploadPath.Contains(","))
                                    {
                                        string[] img = GetList.AllocatorUploadPath.Split(new string[] { "," }, StringSplitOptions.None);
                                        for (int j = 0; j < img.Length; j++)
                                        {
                                            <span>
                                                <a href="~/Uploads/AllocateActionUpload/@img[j]" target="_blank">@img[j]</a>&nbsp;&nbsp;

                                                <br />

                                            </span>
                                        }
                                    }
                                    else
                                    {
                                        if (GetList.AllocatorUploadPath != null && GetList.AllocatorUploadPath != "")
                                        {

                                            <span>
                                                <a href="~/Uploads/AllocateActionUpload/@GetList.AllocatorUploadPath" target="_blank">@GetList.AllocatorUploadPath</a>&nbsp;&nbsp;
                                            </span>
                                        }

                                    }
                                </td>
                                <td>
                                    @if (GetList.DepartmentUploadPath != null && GetList.DepartmentUploadPath.Contains(","))
                                    {
                                        string[] img = GetList.DepartmentUploadPath.Split(new string[] { "," }, StringSplitOptions.None);
                                        for (int j = 0; j < img.Length; j++)
                                        {
                                            <span>
                                                <a href="~/Uploads/DepartmentUserActionUploadPath/@img[j]" target="_blank">@img[j]</a>&nbsp;&nbsp;

                                                <br />

                                            </span>
                                        }
                                    }
                                    else
                                    {
                                        if (GetList.DepartmentUploadPath != null && GetList.DepartmentUploadPath != "")
                                        {

                                            <span>
                                                <a href="~/Uploads/DepartmentUserActionUploadPath/@GetList.DepartmentUploadPath" target="_blank">@GetList.DepartmentUploadPath</a>&nbsp;&nbsp;


                                            </span>
                                        }

                                    }
                                </td>
                                <td>
                                    @GetList.AllocatedBy
                                </td>
                                <td>
                                    @GetList.UpdatedDate
                                </td>
                                <td>
                                    @GetList.ReOpenedComments
                                </td>
                            </tr>
                            }
                        </tbody>

                    </table>
                </div>


            </div>



        </div>
    </div>

</div>

<script>
    (function () {
        var showResults;
        $('#search-box').keyup(function () {
            var searchText;
            searchText = $('#search-box').val();
            return showResults(searchText);
        });
        showResults = function (searchText) {
            $('tbody tr').hide();
            return $('tbody tr:Contains(' + searchText + ')').show();
        };
        jQuery.expr[':'].Contains = jQuery.expr.createPseudo(function (arg) {
            return function (elem) {
                return jQuery(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;
            };
        });
    }.call(this));
</script>

@if (TempData["Success"] != null)
{
    <script type="text/javascript">

            window.onload = function () {
                @*alert("@(TempData["Success"])");*@

                                $.confirm({
                                    title: '@(TempData["Success"]) ',
                                    content: " ",
                                    type: 'dark',
                                    typeAnimated: true,
                                    buttons: {
                                        tryAgain: {
                                            text: 'OK',
                                            btnClass: 'btn-primary',
                                            action: function () {

                                                window.location.reload();
                                            }
                                        },
                                    }
                                });
            };
    </script>
}