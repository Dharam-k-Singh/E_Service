@model  Model.Models.UserCreation.UserPasswordChangeModel

<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">Change Password</li>
    </ol>
</div>


<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Change Password</h1>
    </div>
</div>



<div class="row">

    @if (TempData["Success"] != null)
    {
        <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>

    }

    @if (TempData["Failure"] != null)
    {
        <p class="alert alert-danger" id="failureMessage">@TempData["Failure"]</p>

    }
    <br />
    @using (Html.BeginForm("ChangePassword", "UserCreation", FormMethod.Post, new { enctype = "multipart/form-data", @id = "ChangePassword" }))
    {
        <div class="col-md-12 ">

            <div class="panel panel-default articles ">


                <div class="panel-heading">
                    <div class="col-md-12">
                        Change Password
                    </div>

                </div>


                <div class="panel-body articles-container">
                    <div class="contentdd">


                        <div class="rowcc">

                            @*<span class="bmd-form-group">
                                    <div class="input-group mb-3">
                                        <div class="input-group-prepend">
                                            <label class="input-group-text" for="inputGroupSelect01">Old Password</label>
                                        </div>
                                        @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @type = "password", @class = "form-control", @required = "required", @id = "OldPassword" } })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                                </span>

                                <span class="bmd-form-group">
                                    <div class="input-group mb-3">
                                        <div class="input-group-prepend">
                                            <label class="input-group-text" for="inputGroupSelect01">New Password</label>
                                        </div>
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @type = "password", @class = "form-control", @required = "required", @id = "Password" } })

                                    </div>
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })



                                    @*<input type="checkbox" onclick="myFunction()">Show Password


                                </span>

                                <div class="">
                                    <button class="btn btn-primary" type="submit">Save</button>
                                    @*<button class="btn btn-primary" type="reset">Reset</button>
                                </div>*@







                            <div class="col-xs-12 col-sm-12 col-md-12 ">
                                <div class="form-group">
                                    <label class="control-label" for="inputGroupSelect01">Old Password</label>

                                    @Html.EditorFor(m => m.OldPassword, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "OldPassword", @type = "password" } })

                                    @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-xs-12 col-sm-6 col-md-6 ">
                                <div class="form-group">
                                    <label class="control-label" for="inputGroupSelect01">Password</label>

                                    @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "Password", @type = "password" } })

                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>






                            <div class="col-xs-12 col-sm-6 col-md-6 ">
                                <div class="form-group">
                                    <label class="control-label" for="inputGroupSelect01">Confirm Password</label>

                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "ConfirmPassword", @type = "password" } })

                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="col-xs-12 col-sm-12 col-md-12 " style="text-align:right;">
                                <button class="btn btn-primary" type="submit">Save</button>
                                @*<button class="btn btn-primary" type="reset">Reset</button>*@
                            </div>
                        </div>

                    </div>

                </div>



            </div>
        </div>
    }

</div>
@*<script>

        function myFunction() {
            var x = document.getElementById("Password,Passwordz");
            if (x.type === "password") {
                x.type = "text";
            } else {
                x.type = "password";
            }
        }


    </script>*@
@if (TempData["Success"] != null)
{
    <script type="text/javascript">

            window.onload = function () {
                @*alert("@(TempData["Success"])");*@

                                $.confirm({
                                    title: '@(TempData["Success"]) ',
                                    content: " ",
                                    type: 'dark',
                                    typeAnimated: true,
                                    buttons: {
                                        tryAgain: {
                                            text: 'OK',
                                            btnClass: 'btn-primary',
                                            action: function () {

                                                //window.location.reload();
                                            }
                                        },
                                    }
                                });
            };
    </script>
}