@using Model.CommonEnum;
@model Model.Models.Survey.StartSurveyModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    int AssignSurveyId = Convert.ToInt32(Session["AssignSurveyId"]);
    int SurveyId = Convert.ToInt32(Session["SurveyId"]);
    string SurveyName = Session["SurveyName"].ToString();
    int pageno = Convert.ToInt32(Session["pageNo"]);
    int NoOfPages = Convert.ToInt32(Session["NoOfPages"]);
    int question = 1;
    if (Model.QuestionModel == null)
    {
        question = 0;
    }

}


<div class="row">
    <ol class="breadcrumb">
        <li>
            <a href="#">
                <em class="fa fa-home"></em>
            </a>
        </li>
        <li class="active">Start Survey</li>
    </ol>
</div>


<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">@*Start survey :*@Survey Name : @SurveyName</h1>
    </div>
</div>

<div class="row">

    @if (TempData["Success"] != null)
    {
        <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
        <script>
            var form = document.getElementById("StartSurvey");
            form.reset();
        </script>
    }


    @if (TempData["Failure"] != null)
    {
        <p class="alert alert-danger" id="failureMessage">@TempData["Failure"]</p>
    }


    @using (Html.BeginForm("SaveUserSurveyAnswer", "Survey", FormMethod.Post, new { enctype = "multipart/form-data", @id = "StartSurvey" }))
    {

        <input type="text" name="submit" id="submit" value="" style="display:none" />

        @Html.HiddenFor(m => m.QuestionModel.QuestionId, new { id = "QuestionId" })
        @Html.HiddenFor(m => m.QuestionModel.QuestionTypeId, new { id = "QuestionTypeId" })
        @Html.HiddenFor(m => m.QuestionModel.SurveyId, new { id = "SurveyId" })
        @Html.HiddenFor(m => m.UserSurveyAnswerModel.UserSurveyAnswerId, new { id = "UserSurveyAnswerId" })

        <div class="col-md-12">
            <div class="panel panel-default articles surv-fg">
                <div class="panel-body articles-container table-size survey-ques">
                    <h2 class="section-heading"></h2>
                    <div class="row">
                        <div class="col-lg-12 col-md-12 ">
                            @*<h4><u>@SurveyName</u></h4>*@



                            <div class="row">

                                @if (Model.QuestionModel != null)
                                {
                                    <div class="col-xs-12 col-sm-12 col-md-12 ">
                                        <div class="form-group">
                                            <!--<label for="concept" class="col-sm-4 control-label">Question</label>-->
                                            <div class="col-sm-12">

                                                <h2 class="titleContainer title">@pageno. @Model.QuestionModel.Question</h2>

                                            </div>
                                        </div>
                                    </div>
                                    <br /><br /><br />

                                    <div class="col-xs-12 col-sm-12 col-md-12 ">
                                        <div class="form-group">
                                            <!-- <label for="concept" class="col-sm-4 control-label">Answer</label>-->
                                            <div class="col-sm-12 quizec">
                                                @if (Model.QuestionModel.QuestionTypeId == 16 || Model.QuestionModel.QuestionTypeId == 17)
                                                {
                                                    @Html.TextAreaFor(m => m.UserSurveyAnswerModel.Answer, new { @id = "Answer", @class = "form-control", @required = "required", @maxlength = "2000", @placeholder = "Additional Comments" })
                                                    @Html.ValidationMessageFor(model => model.UserSurveyAnswerModel.Answer, "", new { @style = "color:red" })
                                                }

                                                else if (Model.QuestionModel.QuestionTypeId == 18)
                                                {
                                                    @Html.HiddenFor(m => m.UserSurveyAnswerModel.Answer, new { @id = "Answer", @class = "form-control" })

                                                    foreach (var opts in Model.lstQuestionPollOptionModel)
                                                    {
                                                        if (Model.UserSurveyAnswerModel != null)
                                                        {
                                                            string[] opArray = Model.UserSurveyAnswerModel.Answer.Split(',');
                                                            if (opArray.Any(s => s.Equals(opts.PollName)))
                                                            {
                                                                <div class="form-group">
                                                                    <label class="container_check  version_2">
                                                                        @opts.PollName
                                                                        <input type="checkbox" name="Options[]" id="@opts.PollOptionId" value="@opts.PollName" class="required" checked />
                                                                        <span class="checkmark"></span>
                                                                    </label>

                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    <label class="container_check  version_2">
                                                                        @opts.PollName
                                                                        <input type="checkbox" name="Options[]" id="@opts.PollOptionId" value="@opts.PollName" class="required" />
                                                                        <span class="checkmark"></span>
                                                                    </label>

                                                                </div>
                                                            }
                                                        }
                                                        else
                                                        {

                                                            <div class="form-group">
                                                                <label class="container_check  version_2">
                                                                    @opts.PollName
                                                                    <input type="checkbox" name="Options[]" id="@opts.PollOptionId" value="@opts.PollName" />
                                                                    <span class="checkmark"></span>
                                                                </label>

                                                            </div>
                                                        }

                                                    }
                                                }


                                                else if (Model.QuestionModel.QuestionTypeId == 14)
                                                {

                                                    @Html.HiddenFor(m => m.UserSurveyAnswerModel.Answer, new { @id = "Answer", @class = "form-control" })

                                                    foreach (var opts in Model.lstQuestionPollOptionModel)
                                                    {
                                                        if (Model.UserSurveyAnswerModel != null)
                                                        {
                                                            if ((Model.UserSurveyAnswerModel.Answer) == opts.PollName)
                                                            {

                                                                <div class="form-group">
                                                                    <label class="container_radio version_2">
                                                                        @opts.PollName
                                                                        <input type="radio" name="Option" id="@opts.PollOptionId" value="@opts.PollName" class="required" checked />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </div>



                                                                <!--     <label><input type="radio" name="Option" value="@opts.PollOptionId" checked />&nbsp;  @opts.PollName </label>-->
                                                            }
                                                            else
                                                            {
                                                                <div class="form-group">
                                                                    <label class="container_radio version_2">
                                                                        @opts.PollName
                                                                        <input type="radio" name="Option" id="@opts.PollOptionId" value="@opts.PollName" class="required" />
                                                                        <span class="checkmark"></span>
                                                                    </label>
                                                                </div>


                                                                <!-- <label><input type="radio" name="Option" value="@opts.PollOptionId" />&nbsp;  @opts.PollName </label>-->
                                                            }
                                                        }
                                                        else
                                                        {

                                                            <div class="form-group">
                                                                <label class="container_radio version_2">
                                                                    @opts.PollName
                                                                    <input type="radio" name="Option" id="@opts.PollOptionId" value="@opts.PollName" />
                                                                    <span class="checkmark"></span>
                                                                </label>
                                                            </div>
                                                        }

                                                    }





                                                    <!-- <label for="concept" class="col-sm-4 control-label">Remark</label>-->

                                                    @Html.TextAreaFor(m => m.UserSurveyAnswerModel.Remark, new { @class = "form-control", @maxlength = "500", @placeholder = "Additional Comments" })
                                                }

                                                else if (Model.QuestionModel.QuestionTypeId == 15)
                                                {
                                                    @Html.HiddenFor(m => m.UserSurveyAnswerModel.Answer, new { @id = "Answer", @class = "form-control" })
                                                    foreach (var opts in Model.lstQuestionPollOptionModel)
                                                    {
                                                        int min = Convert.ToInt32(opts.StartName);
                                                        int max = Convert.ToInt32(opts.EndName);
                                                        @*<label> @min &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>*@
                                                            <div class="star-rating-qwe">

                                                                @for (int i = max; i >= min; --i)
                                                                {

                                                                    if (Model.UserSurveyAnswerModel != null)
                                                                    {
                                                                        if (Convert.ToInt32(Model.UserSurveyAnswerModel.Answer) == i)
                                                                        {
                                                                            <input class="radio-ab" id="@i" type="radio" name="RatingOption" value="@i" checked />
                                                                            <label class="star-a" for="@i" aria-hidden="true"><span class="dpsd">@i</span> <i class="active fa fa-star" aria-hidden="true"></i></label>

                                                                        }
                                                                        else
                                                                        {

                                                                            <input class="radio-ab" id="@i" type="radio" name="RatingOption" value="@i" />
                                                                            <label class="star-a" for="@i" aria-hidden="true"><span class="dpsd">@i</span> <i class="active fa fa-star" aria-hidden="true"></i></label>

                                                                        }
                                                                    }
                                                                    else
                                                                    {

                                                                        <input class="radio-ab" id="@i" type="radio" name="RatingOption" value="@i" />
                                                                        <label class="star-a" for="@i" aria-hidden="true"><span class="dpsd">@i</span> <i class="active fa fa-star" aria-hidden="true"></i></label>
                                                                    }

                                                                }
                                                            </div>
                                                    @*<label>&nbsp;&nbsp;&nbsp; @Convert.ToInt32(opts.TotalNoOfRating)</label>*@
                                                }
                                                }
                                                else if (Model.QuestionModel.QuestionTypeId == Convert.ToInt16(LOV.LOVId.RatingTable))
                                                {

                                                @Html.HiddenFor(m => m.UserSurveyAnswerModel.Answer, new { @id = "Answer", @class = "form-control" })

                                                <table id="tblratingtable" class="table table-striped table-bordered" style="display:none;width:91%;">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>


                                                <br /><br /><br />


                                                @Html.TextAreaFor(m => m.UserSurveyAnswerModel.Remark, new { @class = "form-control", @maxlength = "500", @placeholder = "Additional Comments" })
                                                }
                                                else if (Model.QuestionModel.QuestionTypeId == Convert.ToInt16(LOV.LOVId.MarkingTable))
                                                {

                                                @Html.HiddenFor(m => m.UserSurveyAnswerModel.Answer, new { @id = "Answer", @class = "form-control" })

                                                <table id="tblMarkingtable" class="table table-striped table-bordered" style="display:none;width:91%;">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>


                                                <br /><br /><br />


                                                @Html.TextAreaFor(m => m.UserSurveyAnswerModel.Remark, new { @class = "form-control", @maxlength = "500", @placeholder = "Additional Comments" })
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                        </div>

                    </div>
                    <br /><br />
                    <div class="row">
                        <div class="col-lg-12 col-md-12">
                            <div class="action-btns clearfix mt-3 mb-4 text-center">
                                @*<input type="button" class="btn  btn-primary rounded" name="button" value="Previous" id="btnPrevious">*@
                                @Html.ActionLink("Previous", "StartSurvey", "Survey", new { AssignSurveyId = AssignSurveyId, SurveyId = SurveyId, pageNo = pageno - 1, NoOfPages = NoOfPages, SurveyName = SurveyName }, new
                                {
                                    id = "btnPrevious",
                                    @class = "btn  btn-primary rounded",
                                    @style = "margin-left:10px"
                                })
                                <input type="submit" class="btn  btn-primary rounded" name="button" value="Save and Next" id="btnSaveandNext">
                                @*@Html.ActionLink("Next", "StartSurvey", "Survey", new { AssignSurveyId = AssignSurveyId, SurveyId = SurveyId, pageNo = pageno + 1, NoOfPages = NoOfPages, SurveyName = SurveyName }, new { id = "btnNext", @class = "btn  btn-primary rounded", @style = "margin-left:10px" })*@
                                @*<input type="button" class="btn  btn-primary rounded" name="button" value="Next" id="btnNext">*@
                                <input type="submit" class="btn  btn-primary rounded" name="button" value="Submit" id="btnSubmit" style="display:none">
                                @*<input type="reset" class="btn  btn-primary rounded" name="button" style="margin-left:10px" value="Cancel" onclick="document.location.href='../Home/Index';">*@
                                @*@Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn  btn-primary rounded", @style = "margin-left:10px" })*@
                            </div>
                            <div style="float:right">
                                <strong>Page @pageno-of-@NoOfPages</strong>
                            </div>
                        </div>
                    </div>


                </div>

            </div>




        </div>

    }


    <!-- content ene -->
</div>
<script type="text/javascript">
    var surveyansmodel = "";

    $(document).ready(function () {

     setTimeout(function () {
        var dataPollOptionmaxmin =   @Html.Raw(Json.Encode(Model.lstQuestionPollOptionModel));
        var minstart = dataPollOptionmaxmin[0].StartName;
        var maxstart = dataPollOptionmaxmin[0].EndName;

         $('input[type=number]').on('focusout', function () {
            $(this).val(Math.min(parseInt(maxstart), Math.max(parseInt(minstart) , $(this).val())));
         });

         //--check box group

         // the selector will match all input controls of type :checkbox
         // and attach a click event handler
         $("input:checkbox").on('click', function () {
             // in the handler, 'this' refers to the box clicked on
             var $box = $(this);
             if ($box.is(":checked")) {
                 // the name of the box is retrieved using the .attr() method
                 // as it is assumed and expected to be immutable
                 var group = "input:checkbox[name='" + $box.attr("name") + "']";
                 // the checked state of the group/box on the other hand will change
                 // and the current value is retrieved using .prop() method
                 $(group).prop("checked", false);
                 $box.prop("checked", true);
             } else {
                 $box.prop("checked", false);
             }
         });

     }, 2000);

  });


</script>

@if (Model.UserSurveyAnswerModel != null)
{
    <script type="text/javascript">
    surveyansmodel =  @Html.Raw(Json.Encode(Model.UserSurveyAnswerModel));
    </script>

}
<script type="text/javascript">

    var tablethead = $('#tblratingtable thead');
    var tabletbody = $('#tblratingtable tbody');
    var tablebodystring = "";
    var tableheadstring = "";
    var dataPollOption =   @Html.Raw(Json.Encode(Model.lstQuestionPollOptionModel));
    var questiontypee = @Model.QuestionModel.QuestionTypeId;
    var ratingtableid =  @(Html.Raw(Json.Encode(LOV.LOVId.RatingTable)));

    var HeaderLength = 0;

    if (parseInt(questiontypee) == parseInt(ratingtableid)) {

        for (var i = 0; i < dataPollOption.length; i++)
        {
            if (surveyansmodel != "" && surveyansmodel != null )
            {
                var ArrayAnswer = surveyansmodel.Answer.split(",");

                if (i == 0) {
                    tableheadstring += "<tr>";
                    var pollname = dataPollOption[i].PollName
                    var res = pollname.split("||");
                    HeaderLength = res.length;

                    for (var j = 0; j < res.length; j++) {

                        if (j == 0) {
                            tableheadstring += "<th>" + res[j] + "</th>";
                        }
                        else {
                            tableheadstring += "<th>" + res[j] + "</th>";
                        }
                    }

                    tableheadstring += "</tr>";
                    tablethead.append(tableheadstring);
                }
                else {

                    var arrayAnswersplit = ArrayAnswer[i-1].split("$$$$");

                    tablebodystring += "<tr>";
                    tablebodystring += "<td>" + dataPollOption[i].PollName + "</td>";

                    for (var k = 0; k < HeaderLength - 1; k++) {


                        tablebodystring += "<td><input type='number' value=" + arrayAnswersplit[k] +" min=" + dataPollOption[i].StartName + "  max=" + dataPollOption[i].EndName + " style='width:60px;' class='form-control'  /> </td>";
                    }

                    tablebodystring += "</tr>";
                }
            }
            else
            {
                if (i == 0) {
                    tableheadstring += "<tr>";
                    var pollname = dataPollOption[i].PollName
                    var res = pollname.split("||");
                    HeaderLength = res.length;

                    for (var j = 0; j < res.length; j++) {

                        if (j == 0) {
                            tableheadstring += "<th>" + res[j] + "</th>";
                        }
                        else {
                            tableheadstring += "<th>" + res[j] + "</th>";
                        }
                    }

                    tableheadstring += "</tr>";
                    tablethead.append(tableheadstring);
                }
                else
                {

                    tablebodystring += "<tr>";
                    tablebodystring += "<td>" + dataPollOption[i].PollName + "</td>";

                    for (var k = 0; k < HeaderLength-1; k++) {

                        tablebodystring += "<td><input type='number' min=" + dataPollOption[i].StartName + "  max=" + dataPollOption[i].EndName + " style='width:60px;' class='form-control'  /> </td>";
                    }

                    tablebodystring += "</tr>";
                }

            }
        }
    }

    tabletbody.append(tablebodystring);

    $('#tblratingtable').show()

</script>
<script type="text/javascript">

    var tablethead = $('#tblMarkingtable thead');
    var tabletbody = $('#tblMarkingtable tbody');
    var tablebodystring = "";
    var tableheadstring = "";
    var dataPollOption =   @Html.Raw(Json.Encode(Model.lstQuestionPollOptionModel));
    var questiontypee1 = @Model.QuestionModel.QuestionTypeId;
    var MarkingTableid =  @(Html.Raw(Json.Encode(LOV.LOVId.MarkingTable)));

    var HeaderLength = 0;

        if (parseInt(questiontypee1) == parseInt(MarkingTableid)) {

            for (var i = 0; i < dataPollOption.length; i++) {

                if (surveyansmodel != "" && surveyansmodel != null) {
                    var ArrayAnswer = surveyansmodel.Answer.split(",");
                  //  console.log("ArrayAnswer");
                   // console.log(ArrayAnswer);
                    if (i == 0) {
                        tableheadstring += "<tr>";

                        var pollname = dataPollOption[i].PollName
                        var res = pollname.split("||");
                        HeaderLength = res.length;
                      
                        for (var j = 0; j < res.length; j++) {

                            if (j == 0) {
                                tableheadstring += "<th>" + res[j] + "</th>";
                            }
                            else {
                                tableheadstring += "<th>" + res[j] + "</th>";
                            }
                        }

                        tableheadstring += "</tr>";
                        tablethead.append(tableheadstring);
                    }
                    else {

                        var arrayAnswersplit = ArrayAnswer[i].split("$$$$");
                        //alert(arrayAnswersplit);
                        tablebodystring += "<tr>";
                        tablebodystring += "<td>" + dataPollOption[i].PollName + "</td>";

                        for (var k = 1; k <= HeaderLength - 1; k++) {

                            if (arrayAnswersplit[k - 1] == 1) {

                                tablebodystring += "<td class='radio_mark'> <div class='form-group'><label class='container_radio version_2'><input type='radio' checked='checked' name='MarkedOptions" + i + "[]' value='" + res[k] + "' id='Marking" + i + k + "'/><span class='checkmark'></span></label></div> </td>";
                            }
                            else {
                                tablebodystring += "<td class='radio_mark'> <div class='form-group'><label class='container_radio version_2'><input type='radio' name='MarkedOptions" + i + "[]' value='" + res[k] + "' id='Marking" + i + k + "'/><span class='checkmark'></span></label></div> </td>";
                            }


                        }

                        tablebodystring += "</tr>";
                    }
                }
                else {

                    if (i == 0) {
                        tableheadstring += "<tr>";
                        var pollname = dataPollOption[i].PollName
                       // alert(pollname);
                        var res = pollname.split("||");


                        HeaderLength = res.length;

                        for (var j = 0; j < res.length; j++) {
                            //alert(res);
                            if (j == 0) {

                                tableheadstring += "<th>" + res[j] + "</th>";
                            }
                            else {

                                tableheadstring += "<th>" + res[j] + "</th>";
                            }
                        }

                        tableheadstring += "</tr>";

                        tablethead.append(tableheadstring);
                    }
                    else {
                       // alert(res);

                        tablebodystring += "<tr>";
                        tablebodystring += "<td>" + dataPollOption[i].PollName + "</td>";
                        //alert(tableheadstring);

                        for (var k = 1; k <= HeaderLength - 1; k++) {


                                //tablebodystring += "<td><input type='radio' name='MarkedOptions" + k + "[]' value='" + i + k + "' id='Marking" + i + k + "'/> </td>";
//tablebodystring += "<td><input type='radio' name='MarkedOptions" + i + "[]' value='"  +  dataPollOption[i].PollName + "' id='Marking" + i + k + "'/> </td>";
                            tablebodystring += "<td class='radio_mark'> <div class='form-group'><label class='container_radio version_2'><input type='radio' name='MarkedOptions" + i + "[]' value='" + res[k] + "' id='Marking" + i + k + "'/> <span class='checkmark'></span></label></div></td>";

                           



                        }

                        tablebodystring += "</tr>";
                    }

                }
            }

        }

    tabletbody.append(tablebodystring);

    $('#tblMarkingtable').show()

</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#table_id').DataTable();
    });
</script>

<script>

    if (@question== 0)
        $("#btnSaveandNext").hide();

    var pageno=@pageno

    if (@pageno== 1)
        $("#btnPrevious").hide();

    if (@pageno==@NoOfPages) {
        $("#btnNext").hide();
        //$("#btnSaveandNext").val("Save and Submit");

        $("#btnSaveandNext").hide();
        $("#btnSubmit").show();
    }

    var QuestionTypeId = $("#QuestionTypeId").val();



    $("#btnSaveandNext").click(function () {

        if (QuestionTypeId == 14) {
            //var op = $("Option").find('input[type=radio]:checked').val();
            var op = $("input:radio[name='Option']:checked").val();
            console.log(op)
            //alert(op);

            if (op == "" || op == undefined || op == null) {
                alert("Please select an option");
                return false;
            }


            $("#Answer").val(op);
        }

        else if (QuestionTypeId == 15) {
            var op = $("input:radio[name='RatingOption']:checked").val();
            console.log(op)
           // alert(op);
            if (op == "" || op == undefined || op == null) {
                alert("Please select an option");
                return false;
            }

            $("#Answer").val(op);
        }

        else if (QuestionTypeId == 18) {
            var OptionsArray = new Array();

            $.each($("input[name='Options[]']:checked"), function () {
                OptionsArray.push($(this).val());
            });



            if (OptionsArray == "") {
                alert("Please select atleast one option");
                return false;
            }

            console.log(OptionsArray)

            var OptionsArrayString = OptionsArray.join(',');

            console.log(OptionsArrayString)

            $("#Answer").val(OptionsArrayString);
        }
        else if (QuestionTypeId == parseInt(@(Html.Raw(Json.Encode(LOV.LOVId.RatingTable))))) {

            var val = 0
            val = RatingStringOptionsFun();
            if (val == false)
                return false;
        }
        else if (QuestionTypeId == parseInt(@(Html.Raw(Json.Encode(LOV.LOVId.MarkingTable))))) {

            var val = 0
            val = MarkingStringOptionsFun();
            if (val == false) {
                //alert("dddd")
                return false;
            }
        }
       // return false

        $("#StartSurvey").submit();

    });


    $("#btnSubmit").click(function () {

        if (QuestionTypeId == 14) {
            //var op = $("Option").find('input[type=radio]:checked').val();
            var op = $("input:radio[name='Option']:checked").val();
            console.log(op)

            if (op == "" || op == undefined || op == null) {
                alert("Please select an option");
                return false;
            }


            $("#Answer").val(op);
        }

        else if (QuestionTypeId == 15) {
            var op = $("input:radio[name='RatingOption']:checked").val();
            console.log(op)

            if (op == "" || op == undefined || op == null) {
                alert("Please select an option");
                return false;
            }

            $("#Answer").val(op);
        }

        else if (QuestionTypeId == 18) {
            var OptionsArray = new Array();

            $.each($("input[name='Options[]']:checked"), function () {
                OptionsArray.push($(this).val());
            });



            if (OptionsArray == "") {
                alert("Please select atleast one option");
                return false;
            }

            console.log(OptionsArray)

            var OptionsArrayString = OptionsArray.join(',');

            console.log(OptionsArrayString)

            $("#Answer").val(OptionsArrayString);
        }
        else if (QuestionTypeId == parseInt(@(Html.Raw(Json.Encode(LOV.LOVId.RatingTable))))) {
            var val = 0
            val = RatingStringOptionsFun();
            if (val == false) {
                //alert("dddd")
                return false;
            }


        }
        else if (QuestionTypeId == parseInt(@(Html.Raw(Json.Encode(LOV.LOVId.MarkingTable))))) {
            var val = 0
            val = MarkingStringOptionsFun();
            if (val == false) {
                //alert("dddd")
                return false;
            }

        }
        //return false
        $("#submit").val("submit");

        $("#StartSurvey").submit();

    });

    function RatingStringOptionsFun() {

        var OptionsArray = new Array();
        var flag = true;
        var breakflag = 0;
        var stringoption = '';
        var i = 0;

        var numCols = $("#tblratingtable").find('tr')[0].cells.length;
        // var tds = $("#tblratingtable").children('tbody').children('tr').children('td input').length;
        // var colctr = $('#tblratingtable').columnCount();
        // console.log("numCols");
        // console.log(numCols);

        $("#tblratingtable tbody TR").each(function () {
            // alert("TBODY")
            var row = $(this);
            var x2 = "";

            if (breakflag == 1) {
                return false;
            }

            for (var j = 0; j < numCols - 1; j++) {

                //console.log("j");
                //console.log(j);

                if (j == 0) {
                    // console.log("upp");
                    // console.log(row.find("TD input").eq(j).val());

                    var rowvalue = row.find("TD input").eq(j).val();
                   // alert(rowvalue);
                    if (rowvalue == "" || rowvalue == null || rowvalue == undefined) {
                        alert("please enter all rating.");
                        breakflag = 1;
                        flag = false
                        break;
                        //return false;
                    }
                    x2 = rowvalue;
                }
                else {
                    //console.log("donnnn");
                    // console.log(row.find("TD input").eq(j).val());

                    var rowvalue = row.find("TD input").eq(j).val();
                    //alert(rowvalue);
                    if (rowvalue == "" || rowvalue == null || rowvalue == undefined) {
                        alert("please enter all rating.");
                        breakflag = 1;
                        flag = false
                        break;
                        //return false;
                    }
                    x2 += '$$$$' + rowvalue;
                }
            }


            OptionsArray.push(x2);


        });

        //console.log(OptionsArray)

        var OptionsArrayString = OptionsArray.join(',');

        //console.log(OptionsArrayString)

        $("#Answer").val(OptionsArrayString);

        return flag;
    }

    function MarkingStringOptionsFun() {

        var OptionsArray = new Array();
        var flag = true;
        var breakflag = 0;

        var stringoptionCheck = new Array();
        var stringoptionCheckelse = new Array();;
        var i = 1;
        var optioncheckflag = false;
        var optioncheckflagelse = false;

        var numCols = $("#tblMarkingtable").find('tr')[0].cells.length;
        var rowCount = $('#tblMarkingtable tbody tr').length;
        // var tds = $("#tblratingtable").children('tbody').children('tr').children('td input').length;
        // var colctr = $('#tblratingtable').columnCount();
        console.log("rowCount");
        console.log(rowCount);
        console.log("numCols");
        console.log(numCols);

        for (var m = 1; m <= rowCount; m++) {

            var OptionsArraycheck = new Array();

            $.each($("input[name='MarkedOptions" + m + "[]']:checked"), function () {
                OptionsArraycheck.push($(this).val());
            });

            console.log("OptionsArraycheck");
            console.log(OptionsArraycheck);

            if (OptionsArraycheck == "") {
                alert("Please mark for all record.");
                breakflag = 1;
                flag = false
                break;;
            }
        }


        if (breakflag == 0) {


            var c = 1;
            var thvalue = "";
            $("#tblMarkingtable tbody TR").each(function () {
                // console.log("thvalue");
                // console.log($(this).text());
                //var arr = [];
                //$("#ItemsTable tr").each(function () {
                //    arr.push($(this).find("td:first").text()); //put elements into array
                //});

               // if (c != 0) {

                    thvalue += $(this).find("td:first").text() + " - ";

                    
                    $.each($("input[name='MarkedOptions" + c + "[]']:checked"), function () {

                        //OptionsArraycheck.push($(this).val());
                        thvalue += $(this).val() + " | ";
                    });
               // }


                c++;
            });


            thvalue = thvalue.substring(0, thvalue.length - 2);
             console.log("thvalue");
            console.log(thvalue);
            OptionsArray.push(thvalue + '$$$$');

                $("#tblMarkingtable tbody TR").each(function () {

                    var row = $(this);

                    //  var rowvalue = row.find("thead tr th").eq(j).val();

                    //$("table.edit-table thead tr th").each(function () {
                    //    console.log($(this).text());
                    //});
                    // console.log("rowvalue");
                    // console.log(rowvalue);
                    var x2 = "";

                    for (var j = 1; j <= numCols - 1; j++) {

                        if (j == 1) {

                            if ($('#Marking' + i + j).is(":checked")) {
                                // it is checked

                                //var a = $('#Marking' + i + j).val();
                                //alert(a);
                                x2 = 1;
                            }
                            else {
                                x2 = 0;
                            }

                        }
                        else {


                            if ($('#Marking' + i + j).is(":checked")) {
                                // it is checked
                                //var a = $('#Marking' + i + j).val();
                                //alert(a);
                                x2 += '$$$$' + 1;
                            }
                            else {
                                x2 += '$$$$' + 0;
                            }

                        }
                    }


                    OptionsArray.push(x2);
                    i++;

                });







            //console.log(OptionsArray)

            var OptionsArrayString = OptionsArray.join(',');
            //alert(OptionsArrayString);
            //console.log(OptionsArrayString)

            $("#Answer").val(OptionsArrayString);

        }

        return flag;
    }

</script>

@if (TempData["Success"] != null)
{
    <script type="text/javascript">

            window.onload = function () {
                @*alert("@(TempData["Success"])");*@

                                $.confirm({
                                    title: '@(TempData["Success"]) ',
                                    content: " ",
                                    type: 'dark',
                                    typeAnimated: true,
                                    buttons: {
                                        tryAgain: {
                                            text: 'OK',
                                            btnClass: 'btn-primary',
                                            action: function () {

                                                window.location.reload();
                                            }
                                        },
                                    }
                                });
            };
    </script>
}
@if (TempData["Failure"] != null)
{
    <script type="text/javascript">

            window.onload = function () {
            

                                $.confirm({
                                    title: '@(TempData["Failure"]) ',
                                    content: " ",
                                    type: 'dark',
                                    typeAnimated: true,
                                    buttons: {
                                        tryAgain: {
                                            text: 'OK',
                                            btnClass: 'btn-primary',
                                            action: function () {

                                                window.location.reload();
                                            }
                                        },
                                    }
                                });
            };
    </script>
}

    <script>

        jQuery(function ($) {
            $(document).ajaxSend(function () {
                $("#overlay").fadeIn(3000);
            });

            $('#btnSubmit').click(function () {
                $.ajax({
                    type: 'GET',
                    success: function (data) {
                        console.log(data);
                    }
                }).done(function () {
                    setTimeout(function () {
                        $("#overlay").fadeOut(3000);
                    }, 5000);
                });
            });
        });
    </script>
